//
//  Assignment #1
//  C++ Lecture (APCT-231C-01)
//
//  Due: 9/15/2015
//
//  Created by Masatoshi Nishiguchi on 9/12/2015.
//
 
//==> Chapter2 Exercises

 #2: Valid C++ identifiers
    Ans.
        b, e, j
 
 #6-c: 28 - 3 + 6
    (28 - 3) + 6
    25 + 6
    31

    Ans. 31
 
 #6-d: 6 / 5

    Ans. 1
 
 #6-f: 15 + 18 % 2 - 20 / 6
    15 + (18 % 2) - (20 / 6)
    15 + 0 - 3
    12

    Ans. 12
 
 #6-g: 32 % 12 + 6 - 36 / 5 * 8
    (32 % 12) + 6 - ( (36 / 5) * 8 )
    8 + 6 - (7 * 8)
    8 + 6 - 56
    -42

    Ans. -42

 #6-i: 18.0 + 5.0 * 3.0 / 4.0
    18.0 + ( (5.0 * 3.0) / 4.0 )
    18.0 + ( 15.0 / 4.0 )
    18.0 + 3.75
    21.75

    Ans. 21.75
 
 #8: Valid or invalid
 // Given:
 // int num1, num2, newNum;
 // double x, y;

 #8-c:
    num1 = 5;        // num1: 5,     num2: undefined
    num2 = 2 + num1; // num1: 5,     num2: 2 + 5
                     // num1: 5,     num2: 7
    num1 = num2 / 3; // num1: 7 / 3, num2: 7
                     // num1: 2,     num2: 7

    Ans. Valid

 #8-d:
    num1 * num2 = newNum;  // expression = variable

    Ans.
        Invalid because the assignment statement should be written in the form of `variable = expression;`
 
 #8-f:
    num1 * 2 = newNum + num2;  // expression = expression

    Ans.
        Invalid because the assignment statement should be written in the form of `variable = expression;`

 #8-g:
    x / y = x * y;  // expression = expression

    Ans.
        Invalid because the assignment statement should be written in the form of `variable = expression;`

 #8-i:
    newNum = static_cast<int> (x) % 5;  // x: undefined

    Ans.
        Invalid because the variable x has not been initialized.

 #12: Write C++ statements

 #12-a: Declare int variable x and y. Initialize x to 25 and y to 18.
    Ans.
        int x, y;
        x = 25;
        y = 18;

 #12-b: Declare and initialize an int variable temp to 10 and a char variable ch to 'A'.
    Ans.
        int temp = 10;
        char ch  = 'A';

 #12-c: Update the value of an int variable x by adding 5 to it.
    Ans.
        x += 5;

 #12-d: Declare and initialize a double variable payRate to 12.50.
    Ans.
        double payRate = 12.50;

 #12-e: Copy the value of an int variable firstNum into an int variable tempNum.
    Ans.
        tempNum = firstNum;

 #12-f: Swap the contents of the int variables x and y
    Ans.
        int temp = x;  // Stash the origial value of x in the temp
        x = y;         // Put the value of y into x
        y = temp;      // Put the original value of x into y

 #12-g: Suppose x and y are double variables. Output the contents of x, y, and the expression x + 12 / y - 18.
    Ans.
        cout << x << endl;
        cout << y << endl;
        cout << x + 12.0 / y - 18.0 << endl;

 #12-h: Declare a char variable grade and set the value of grade to 'A'.
    Ans.
        char grade = 'A';

 #12-i: Declare int variables to store four integers.
    Ans.
        int num1, num2, num3, num4;

 #14: Suppose x, y, z and w are int variables
    x = 12;
    y = 18;
    z = x - 5 / x;     // x: 12, y: 18, z: 12 - (5 / 12), w: unknown
                       // x: 12, y: 18, z: 12 - (5 / 12), w: unknown
                       // x: 12, y: 18, z: 12 - 0, w: unknown
                       // x: 12, y: 18, z: 12, w: unknown
    x = z - y;         // x: 12 - 18, y: 18, z: 12, w: unknown
                       // x: -6, y: 18, z: 12, w: unknown
    y = x + 3 * z;     // x: -6, y: -6 + (3 * 12), z: 12, w: unknown
                       // x: -6, y: -6 + 36, z: 12, w: unknown
                       // x: -6, y: 30, z: 12, w: unknown
    w = x - y + 2 * z; // x: -6, y: 30, z: 12, w: -6 - 30 + (2 * 12)
                       // x: -6, y: 30, z: 12, w: -6 - 30 + 24
                       // x: -6, y: 30, z: 12, w: -6 - 30 + 24
                       // x: -6, y: 30, z: 12, w: -12
    w ++;              // x: -6, y: 30, z: 12, w: -12 + 1
                       // x: -6, y: 30, z: 12, w: -11
    z = 2 * y + w - x; // x: -6, y: 30, z: (2 * 30) + (-11) - (-6), w: -11
                       // x: -6, y: 30, z: 60 + (-11) - (-6), w: -11
                       // x: -6, y: 30, z: 55, w: -11

    Ans: w: -11, x: -6, y: 30, z: 55

 #18: Write C++ statements

 #18-a: Output the newline character
    Ans.
        cout << '\n';

 #18-b: Output the tab character
    Ans.
        cout << '\t';

 #18-c: Output double quotation mark
    Ans.
        cout << '\"';

 #20:

 #20-a: A variable to store the first name of a student
    Ans.
        string firstNameStudent = "Masatoshi";

 #20-b: A variable to store the discounted price of an item 
    Ans.
        double itemPriceDiscounted = 9.99;

 #20-c: A variable to store the number of juice bottles
    Ans.
        int numJuiceBottles = 64;

 #20-d: A variable to store the number of miles traveled
    Ans.
        double milesTraveled = 26.37;

 #20-e: A variable to store the highest test score
    Ans.
        const double MAX_TEST_SCORE = 60.0;

 #24: Correct the code
    Ans.
        #include <iostream>
        using namespace std;

        int main() {
            int num1, num2;
            string str1;
            
            cout << "Enter a string without any blanks in it: ";
            cin >> str1;
            cout << endl;
            
            cout << "Enter two integers: ";
            cin >> num1 >> num2;
            cout << endl;

            cout << str1 << " " << "num1 * num2 = " << num1 * num2 << endl;
            
            return 0;
        }

 #30: Suppose a, b and sum are int variables and c is a double variable.
 // int a, b, sum;
 // double c;
 // a = 3;
 // b = 5;
 // c = 14.1;

 sum = a + b + c;
    a: 3, b: 5, c: 14.1, sum: 3 + 5 + 14.1
    a: 3, b: 5, c: 14.1, sum: 22

    Ans. a: 3, b: 5, c: 14.1, sum: 22

 c /= a;
    a: 3, b: 5, c: 14.1 / 3, sum: 22
    a: 3, b: 5, c: 4.7,      sum: 22
    
    Ans. a: 3, b: 5, c: 4.7, sum: 22

 b += c - a;
    a: 3, b: 5 + (4.7 - 3), c: 4.7, sum: 22
    a: 3, b: 5 + 1.7,       c: 4.7, sum: 22
    a: 3, b: 6,             c: 4.7, sum: 22
    
    Ans. a: 3, b: 6, c: 4.7, sum: 22

 a *= 2 * b + c;
    a: 3 * ((2 * 6) + 4.7), b: 6, c: 4.7, sum: 22
    a: 3 * (12 + 4.7),      b: 6, c: 4.7, sum: 22
    a: 3 * 16.7,            b: 6, c: 4.7, sum: 22
    a: 50,                  b: 6, c: 4.7, sum: 22

    Ans. a: 50, b: 6, c: 4.7, sum: 22


 //==> Chapter2 Programming exercises

 // Please analyze these problems like we did in class.
 // You may write your program using notepad or word processor.
 // Be ready to run them in class on Tuesday.

 #3

 Analysis

    Calculating the average of the provided three numbers:
        ( 125 + 28 + (-25) ) / 3 = 42.666666...
    Since the variable average is of type int, the decimal fraction of the number will be truncated in the actual program.

 Code

    // a. Include the header file iostream
    #include <iostream>

    // b. Allows us to use cin, cout and endl without the prefix std::
    using namespace std; 

    int main()
    {
        // c. Declare variables
        int num1, num2, num3, average;
        
        // d. Store values into num1, num2 and num3
        num1 = 125;
        num2 = 28;
        num3 = -25;
        
        // e. Store the average of num1, num2 and num3 into average
        average = (num1 + num2 + num3) / 3;

        // f. Output the values of num1, num2 and num3 and average
        cout << num1 << " "
             << num2 << " "
             << num3 << " "
             << average << endl;
        
        return 0;
    }

    // g. Compile and run this program
    // >>>Build successful
    // >>>Output: 125 28 -25 42

 #8:

 Analysis

    A new number is generaged based on two numbers that user provides, and is calculated using the following formula:
        newNum = (num1 * 2) + num2

    Then the secret number is updated by adding a secret number to it
        updatedNewNum = newNum + SECRET

    The salary is calculated using the following formula:
        wages = RATE * hoursWorked

 Code

    // a. Include the header file iostream and string
    #include <iostream>
    #include <string>

    // b. Allows us to use cin, cout and endl without the prefix std::
    using namespace std;

    int main() {
        // c. Declare and initialize named constants
        const int SECRET  = 11;
        const double RATE = 12.50;
        
        // d. Declare variables
        int num1, num2, newNum;
        string name;
        double hoursWorked, wages;
        
        // e. Prompt the user to input two integers and
        // store the first number in num1 and the second number in num2
        cout << "Please enter two integers separated by space: ";
        cin >> num1 >> num2;
        
        // f. Output values of num1 and num2
        cout << "The value of num1   = " << num1 << endl;
        cout << "The value of num2   = " << num2 << endl;
        
        // g. Multiply the value of num1 by 2, add the value of num2 to it,
        // and then store the result in newNum.
        // Output the value of newNum
        newNum = (num1 * 2) + num2;
        cout << "The value of newNum = " << newNum << endl;
        
        // h. Update the value of newNum by adding the value of the named constant SECRET to it.
        // Output the value of newNum with an appropriate message.
        newNum += SECRET;
        cout << "The value of newNum was updated: " << newNum << endl;

        // i. Prompt the user to enter a person's last name
        // and then store the last name into the variable name.
        cout << endl;
        cout << "Please enter your last name: ";
        cin >> name;
        
        // j. Prompt the user to enter a decimal number between 0 and 70
        // and then store the number into hoursWorked.
        cout << "Please enter hours that you worked between 0 and 70: ";
        cin >> hoursWorked;

        // k. Multiply the value of the named constant RATE with the value of hourWorked
        // and then store the result into the variable wages
        wages = RATE * hoursWorked;
        
        // l. Output the results
        cout << endl;
        cout << "Name:         " << name << endl;
        cout << "Pay Rate:     $" << RATE << endl;
        cout << "Hours Worked: " << hoursWorked << endl;
        cout << "Salary:       $" << wages << endl;
        
        return 0;
    }

        // m. Run the program with following input data:
        //   a. num1 = 13; num2 = 28; name = "Jacobson"; hoursWorked = 48.30;
        //   b. num1 = 32; num2 = 15; name = "Crawford"; hoursWorked = 58.45;

 #9: Write a program that prompt the user to enter five test scores and then prints the average test score. (Assume that the test scores are decimal numbers.)

 Analysis

    We can calculate the average of five scores using the following formula:
        average = (score1 + score2 + score3 + score4 + score5 ) / 5

 Code

    #include <iostream>
    using namespace std;

    int main() {
        // Declare variables to store five test scores
        const int NUM_SCORES = 5;
        double scores[NUM_SCORES];
        double average = 0.0;
        double sum     = 0.0;
        
        // Prompt the user to input five test scores and store them in variables
        cout << "Please enter five test scores" << endl;
        for (int i = 0; i < NUM_SCORES; i++) {
            
            // Prompt the user for each score
            cout << "Score#" << i + 1 << ": ";
            
            // Store a score
            cin >> scores[i];
            
            // Add the score to the sum
            sum += scores[i];
        }
        
        // Calculate the average score
        average = sum / NUM_SCORES;
        
        // Print the average score
        cout << "Your average score: " << average << endl;
        
        return 0;
    }

 #11: Write a program that prompts the capacity, in gallons, of an automobile fuel tank and the miles per gallon the automobile can be driven. The program outputs the number of miles the automobile can be driven without refueling.

 Analysis
    
    We can calculate the number of miles the automobile can be driven without refueling using following formula:
        fuelCapacityInGallons / milesPerGallon

 Code

    #include <iostream>
    using namespace std;

    // Prompts the capacity, in gallons, of an automobile fuel tank and
    // the miles per gallon the automobile can be driven.
    // Outputs the number of miles the automobile can be driven without refueling.

    int main() {
        // Declare variables
        double fuelCapacityInGallons = 0.0;
        double milesPerGallon = 0.0;
        
        // Prompts the capacity, in gallons, of an automobile fuel tank
        cout << "Please enter the capacity of an automobile fuel tank, in gallons: " << endl;
        cin >> fuelCapacityInGallons;
        
        // Prompts the miles per gallon the automobile can be driven
        cout << "Please enter the miles per gallon: " << endl;
        cin >> milesPerGallon;

        // Print number of miles the automobile can be driven without refueling
        cout << endl;
        cout << "This automobile can be driven for "
             << fuelCapacityInGallons / milesPerGallon << " miles without refueling" << endl;
        
        return 0;
    }

